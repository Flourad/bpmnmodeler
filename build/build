#!/usr/bin/env ruby

if ($*[0] == "-h" || $*[0] == "--help") 
   puts <<-HELP
USAGE #{$0} build-type [goal=build] 
  
  built-type: the type of build to run.

  goal: the goal of the build. Currently you can choose between build and build.site. build is the default option.
 
  To see the available build types, type #{$0} --build-types, or #{$0} -b
HELP
   exit 0
end

require('yaml')
builds = YAML::load_file("#{File.dirname(__FILE__)}/builds.yaml")
if ($*[0] == "-b" || $*[0] == "--build-types")
  puts "Available configurations:"
  builds.keys.each do |build|
	puts "  #{build}: #{builds[build]["description"]}"
  end
  puts "You can run those configurations like this: $0 build-type target, where build-type is the name of the build"
  exit 0
end

if (builds[$*[0]].nil?)
  puts "Unknown configuration #{$*[0]}\nTry #{$0} -b to see the build configurations available"
  exit 1
end
build = builds[$*[0]]


if Dir[build["basedir"]] != nil
  puts "The target directory already exists! Removing. We might need a better strategy for this case."
  system("rm -Rf #{build["basedir"]}");
end

temp_path = Time.now.to_i
goal = $*[1] || "build"
system("cd #{File.dirname(__FILE__)}/buckminster ; $ANT_HOME/bin/ant -Dbase.directory=#{temp_path}/#{goal} -Dpde.target.platform.path=/shared/stp/platforms/#{build["platform"]}/eclipse -Dproject.tag=#{build["path"]} -Dproject.build=#{File.dirname(__FILE__)} #{goal}");
system("mkdir -p #{build["basedir"]}")
system("mv #{File.dirname(__FILE__)}/buckminster/#{temp_path}/#{goal} #{build["basedir"]}/#{goal}")
system("rm -Rf #{File.dirname(__FILE__)}/buckminster/#{temp_path}")
