<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.stp.bpmn.diagram">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.stp.bpmn.diagram" id="DecorationFilter" name="DecorationFilter"/>
      </appInfo>
      <documentation>
         The decoration filter filters the decorators tied to a particular EAnnotation source and/or a particular marker type. Several EAnnotation sources and marker types can be defined.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="filter"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="filter">
      <annotation>
         <documentation>
            The main element : a filter to filter the decorators showing some types of annotations or markers.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="source" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="marker" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The Id of the filter. It must be unique over the workbench.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The name of the filter that will be shown in the toolbar menu.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  The image of the icon that will be shown in the toolbar menu.
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="onByDefault" type="boolean" use="required">
            <annotation>
               <documentation>
                  If the value of this attribute is true, the filter will be enabled by default. This value may be overridden by the user, as the platform records the preferences regarding each type of filter.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="source">
      <annotation>
         <documentation>
            The source of the EAnnotation that should be filtered. The source of an EAnnotation is the link that ties it to its container, an EModelElement. Those elements are all part of the EMF Framework.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="value" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="marker">
      <annotation>
         <documentation>
            The type of the marker that should be filtered. The value attribute contains the String corresponding to the typ, while the optional code attribute refers to the marker&apos;s code attribute, that is used by the EMF Validation framework. This extension point can reuse the code attribute to filter only the validation rules that have the same code value.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="type" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="code" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         April 30, 2007
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         &lt;extension point=&quot;org.eclipse.stp.bpmn.diagram.DecorationFilter&quot;&gt;
      &lt;filter icon=&quot;icons/obj16/file_obj.gif&quot;
            id=&quot;org.eclipse.stp.bpmn.diagram.filter.genericFileFilter&quot;
            name=&quot;Attached file&quot;
            onByDefault=&quot;false&quot;&gt;
         &lt;source value=&quot;genericFile&quot;/&gt;
      &lt;/filter&gt;
   &lt;/extension&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2007, Intalio Inc.
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the Eclipse Public License v1.0
 which accompanies this distribution, and is available at
 http://www.eclipse.org/legal/epl-v10.html
 
 Contributors:
     Intalio Inc. - initial API and implementation
      </documentation>
   </annotation>

</schema>
